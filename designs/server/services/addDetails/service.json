[
    {
        "id": "SSD_SERVICE_ID_sd_eio0SSjuVYF2cm7t",
        "type": "tab",
        "createdDate": "2024-02-20T17:48:24.119Z",
        "label": "service",
        "disabled": false,
        "info": "",
        "functionSeq": 0,
        "generateNext": true,
        "serviceName": "service",
        "relativeParentPath": "addDetails"
    },
    {
        "id": "sd_doF8fRrVEGB3MlOy",
        "type": "Start",
        "z": "SSD_SERVICE_ID_sd_eio0SSjuVYF2cm7t",
        "viewType": "client-server",
        "nodeType": "start",
        "name": "add details",
        "outputs": 1,
        "inputVariables": [
            {
                "key": "data",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": false
            },
            {
                "key": "response",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": true
            },
            {
                "key": "file",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": false
            }
        ],
        "localVariables": [],
        "accept_bh": false,
        "functionName": "addDetails",
        "category": "General",
        "x": 105,
        "y": 120,
        "wires": [
            [
                "sd_mJBytcOyrUKDF50f"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "service"
    },
    {
        "id": "sd_A1SudyGfHtEDRAKD",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_eio0SSjuVYF2cm7t",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "console.log(bh.local.result,'result consoling after adding')\nbh.input.response = {\n    statusCode:200,\n    message:'Data add successfully'\n}",
        "functionName": "sd_A1SudyGfHtEDRAKD",
        "category": "Function",
        "x": 825,
        "y": 120,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "service",
        "generated": true
    },
    {
        "id": "sd_pj5zd9GdNJ97rqXQ",
        "type": "ExecuteSql",
        "z": "SSD_SERVICE_ID_sd_eio0SSjuVYF2cm7t",
        "viewType": "server",
        "nodeType": "flow",
        "name": "",
        "databaseConfig": "sd_0MpEPLPhEvkKRNun",
        "queryType": "",
        "resultMap": {
            "type": "bh.local",
            "value": "result"
        },
        "multipleQuery": "",
        "singleQuery": {
            "type": "bh.local",
            "value": "insertQuery"
        },
        "inputs": 1,
        "outputs": 1,
        "params": [],
        "paramMappingObj": {
            "type": "bh.local",
            "value": "insertValues"
        },
        "dbType": "postgres",
        "functionName": "sd_pj5zd9GdNJ97rqXQ",
        "category": "Storage",
        "x": 685,
        "y": 120,
        "wires": [
            [
                "sd_A1SudyGfHtEDRAKD"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "service",
        "generated": true
    },
    {
        "id": "sd_aiC3OfHzLvLGTfbL",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_eio0SSjuVYF2cm7t",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "bh.local.insertQuery = `INSERT INTO \"public\".\"user_details\"(\"name\", \"phone\", \"email\", \"file\",\"sex\", \"details\") VALUES ($1, $2, $3, $4, $5, $6) RETURNING \"id\";`\nconsole.log([bh?.input?.file], bh?.input?.data?.details)\nbh.local.insertValues =  [bh?.input?.data?.name, bh?.input?.data?.phone, bh?.input?.data?.email,bh?.local?.file,bh.input?.data?.sex, bh?.input?.data?.details];",
        "functionName": "sd_aiC3OfHzLvLGTfbL",
        "category": "Function",
        "x": 505,
        "y": 120,
        "wires": [
            [
                "sd_pj5zd9GdNJ97rqXQ"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "service",
        "generated": true
    },
    {
        "id": "sd_mJBytcOyrUKDF50f",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_eio0SSjuVYF2cm7t",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "const fs = require('fs')\nconst mime = require('mime-types')\nconst cloudinary = require(\"cloudinary\").v2;\n\nlet cloud_name = process.env.CLOUDNAME\nlet api_key = process.env.CLOUD_API\nlet api_secret = process.env.CLOUD_SECRET\n\ncloudinary.config({ \n    cloud_name, \n    api_key, \n    api_secret \n});\n\nconst file = bh?.input?.file\nif (file) {\n    bh.local.file = ''\n    const mimeType = mime.lookup(file.originalname);\n    console.log(mimeType,'mimetype')\n    if (mimeType && (mimeType.includes(\"image/\")||mimeType.includes(\"application/pdf\"))) {\n        const upload = await cloudinary.uploader.upload(file.path);\n        bh.local.file = upload.secure_url;\n        if (fs.existsSync(file.path)) fs.unlinkSync(file.path);\n    };\n}\n\nconsole.log(bh.local.file,'consoling file after cloudinary')",
        "functionName": "sd_mJBytcOyrUKDF50f",
        "category": "Function",
        "x": 345,
        "y": 120,
        "wires": [
            [
                "sd_aiC3OfHzLvLGTfbL"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "service",
        "generated": true
    }
]
